// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview AI flow that suggests travel destinations based on user preferences.
 *
 * - suggestDestinations - A function that takes travel preferences as input and returns a list of suggested destinations.
 * - SuggestDestinationsInput - The input type for the suggestDestinations function.
 * - SuggestDestinationsOutput - The return type for the suggestDestinations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestDestinationsInputSchema = z.object({
  interests: z
    .string()
    .describe(
      'Interests of the traveler, e.g., history, food, adventure, nature.'
    ),
  travelStyle: z
    .string()
    .describe(
      'Preferred travel style, e.g., luxury, budget, backpacking, family-friendly.'
    ),
  budget: z.string().describe('Budget for the trip, e.g., low, medium, high.'),
});
export type SuggestDestinationsInput = z.infer<typeof SuggestDestinationsInputSchema>;

const SuggestDestinationsOutputSchema = z.object({
  destinations: z
    .array(z.string())
    .describe('A list of suggested travel destinations.'),
});
export type SuggestDestinationsOutput = z.infer<typeof SuggestDestinationsOutputSchema>;

export async function suggestDestinations(
  input: SuggestDestinationsInput
): Promise<SuggestDestinationsOutput> {
  return suggestDestinationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestDestinationsPrompt',
  input: {schema: SuggestDestinationsInputSchema},
  output: {schema: SuggestDestinationsOutputSchema},
  prompt: `Suggest a list of travel destinations based on the following preferences:

Interests: {{{interests}}}
Travel Style: {{{travelStyle}}}
Budget: {{{budget}}}

Destinations:`, // Ensure this matches the output schema
});

const suggestDestinationsFlow = ai.defineFlow(
  {
    name: 'suggestDestinationsFlow',
    inputSchema: SuggestDestinationsInputSchema,
    outputSchema: SuggestDestinationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
